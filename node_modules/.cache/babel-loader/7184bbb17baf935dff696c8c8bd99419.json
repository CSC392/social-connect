{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alana\\\\Desktop\\\\social-connect\\\\src\\\\components\\\\MoveValidation.js\";\nimport React, { Component } from \"react\";\nimport Chessboardjsx from \"chessboardjsx\";\nimport Chess from \"chess.js\";\nimport PropTypes from \"prop-types\"; //133, 105, 45 colours\n// Title: test-chessboardjsx/WithMoveValidation.js\n// Author: William Bashelor\n// Date: Sept 3rd, 2019\n// Code version: v2.4.2\n// Availability: https://codesandbox.io/s/x332zqpkl4?file=/src/integrations/WithMoveValidation.js\n\nclass HumanVsHuman extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      fen: \"start\",\n      dropSquareStyle: {},\n      squareStyles: {},\n      pieceSquare: \"\",\n      square: \"\",\n      history: []\n    };\n\n    this.removeHighlightSquare = () => {\n      this.setState(({\n        pieceSquare,\n        history\n      }) => ({\n        squareStyles: squareStyling({\n          pieceSquare,\n          history\n        })\n      }));\n    };\n\n    this.highlightSquare = (sourceSquare, squaresToHighlight) => {\n      const highlightStyles = [sourceSquare, ...squaresToHighlight].reduce((a, c) => {\n        return { ...a,\n          ...{\n            [c]: {\n              background: \"radial-gradient(circle, #C8BFE7 36%, transparent 40%)\",\n              borderRadius: \"50%\"\n            }\n          },\n          ...squareStyling({\n            history: this.state.history,\n            pieceSquare: this.state.pieceSquare\n          })\n        };\n      }, {});\n      this.setState(({\n        squareStyles\n      }) => ({\n        squareStyles: { ...squareStyles,\n          ...highlightStyles\n        }\n      }));\n    };\n\n    this.onDrop = ({\n      sourceSquare,\n      targetSquare\n    }) => {\n      // see if the move is legal\n      let move = this.game.move({\n        from: sourceSquare,\n        to: targetSquare,\n        promotion: \"q\" // always promote to a queen for example simplicity\n\n      }); // illegal move\n\n      if (move === null) return;\n      this.setState(({\n        history,\n        pieceSquare\n      }) => ({\n        fen: this.game.fen(),\n        history: this.game.history({\n          verbose: true\n        }),\n        squareStyles: squareStyling({\n          pieceSquare,\n          history\n        })\n      }));\n    };\n\n    this.onMouseOverSquare = square => {\n      // get list of possible moves for this square, return if there are no move available.\n      let moves = this.game.moves({\n        square: square,\n        verbose: true\n      });\n      if (moves.length === 0) return;\n      let squaresToHighlight = [];\n\n      for (var i = 0; i < moves.length; i++) {\n        squaresToHighlight.push(moves[i].to);\n      }\n\n      this.highlightSquare(square, squaresToHighlight);\n    };\n\n    this.onMouseOutSquare = square => this.removeHighlightSquare(square);\n\n    this.onDragOverSquare = square => {\n      this.setState({\n        dropSquareStyle: square === \"e4\" || square === \"d4\" || square === \"e5\" || square === \"d5\" ? {\n          backgroundColor: \"C8BFE7\"\n        } : {\n          boxShadow: \"inset 0 0 1px 4px #C8BFE7\"\n        }\n      });\n    };\n\n    this.onSquareClick = square => {\n      this.setState(({\n        history\n      }) => ({\n        squareStyles: squareStyling({\n          pieceSquare: square,\n          history\n        }),\n        pieceSquare: square\n      }));\n      let move = this.game.move({\n        from: this.state.pieceSquare,\n        to: square,\n        promotion: \"q\"\n      }); // illegal move\n\n      if (move === null) return;\n      this.setState({\n        fen: this.game.fen(),\n        history: this.game.history({\n          verbose: true\n        }),\n        pieceSquare: \"\"\n      });\n    };\n\n    this.onSquareRightClick = square => this.setState({\n      squareStyles: {\n        [square]: {\n          backgroundColor: \"C8BFE7\"\n        }\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.game = new Chess();\n  }\n\n  render() {\n    const {\n      fen,\n      dropSquareStyle,\n      squareStyles\n    } = this.state;\n    return this.props.children({\n      squareStyles,\n      position: fen,\n      onMouseOverSquare: this.onMouseOverSquare,\n      onMouseOutSquare: this.onMouseOutSquare,\n      onDrop: this.onDrop,\n      dropSquareStyle,\n      onDragOverSquare: this.onDragOverSquare,\n      onSquareClick: this.onSquareClick,\n      onSquareRightClick: this.onSquareRightClick\n    });\n  }\n\n}\n\nHumanVsHuman.propTypes = {\n  children: PropTypes.func\n};\nexport default function MoveValidation() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(HumanVsHuman, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, ({\n    position,\n    onDrop,\n    onMouseOverSquare,\n    onMouseOutSquare,\n    squareStyles,\n    dropSquareStyle,\n    onDragOverSquare,\n    onSquareClick,\n    onSquareRightClick\n  }) => /*#__PURE__*/React.createElement(Chessboardjsx, {\n    id: \"humanVsHuman\",\n    width: 500,\n    position: position,\n    onDrop: onDrop,\n    onMouseOverSquare: onMouseOverSquare,\n    onMouseOutSquare: onMouseOutSquare,\n    boardStyle: {\n      borderRadius: \"5px\",\n      boxShadow: `0 5px 15px rgba(0, 0, 0, 0.5)`\n    },\n    squareStyles: squareStyles,\n    dropSquareStyle: dropSquareStyle,\n    onDragOverSquare: onDragOverSquare,\n    onSquareClick: onSquareClick,\n    onSquareRightClick: onSquareRightClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  })));\n}\n\nconst squareStyling = ({\n  pieceSquare,\n  history\n}) => {\n  const sourceSquare = history.length && history[history.length - 1].from;\n  const targetSquare = history.length && history[history.length - 1].to;\n  return {\n    [pieceSquare]: {\n      backgroundColor: \"C8BFE7\"\n    },\n    ...(history.length && {\n      [sourceSquare]: {\n        backgroundColor: \"C8BFE7\"\n      }\n    }),\n    ...(history.length && {\n      [targetSquare]: {\n        backgroundColor: \"C8BFE7\"\n      }\n    })\n  };\n};","map":{"version":3,"sources":["C:/Users/alana/Desktop/social-connect/src/components/MoveValidation.js"],"names":["React","Component","Chessboardjsx","Chess","PropTypes","HumanVsHuman","state","fen","dropSquareStyle","squareStyles","pieceSquare","square","history","removeHighlightSquare","setState","squareStyling","highlightSquare","sourceSquare","squaresToHighlight","highlightStyles","reduce","a","c","background","borderRadius","onDrop","targetSquare","move","game","from","to","promotion","verbose","onMouseOverSquare","moves","length","i","push","onMouseOutSquare","onDragOverSquare","backgroundColor","boxShadow","onSquareClick","onSquareRightClick","componentDidMount","render","props","children","position","propTypes","func","MoveValidation"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,eAA1B;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,YAAN,SAA2BJ,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAMjCK,KANiC,GAMzB;AACNC,MAAAA,GAAG,EAAE,OADC;AAENC,MAAAA,eAAe,EAAE,EAFX;AAGNC,MAAAA,YAAY,EAAE,EAHR;AAINC,MAAAA,WAAW,EAAE,EAJP;AAKNC,MAAAA,MAAM,EAAE,EALF;AAMNC,MAAAA,OAAO,EAAE;AANH,KANyB;;AAAA,SAgBjCC,qBAhBiC,GAgBT,MAAM;AAC5B,WAAKC,QAAL,CAAc,CAAC;AAAEJ,QAAAA,WAAF;AAAeE,QAAAA;AAAf,OAAD,MAA+B;AAC3CH,QAAAA,YAAY,EAAEM,aAAa,CAAC;AAAEL,UAAAA,WAAF;AAAeE,UAAAA;AAAf,SAAD;AADgB,OAA/B,CAAd;AAGD,KApBgC;;AAAA,SAuBjCI,eAvBiC,GAuBf,CAACC,YAAD,EAAeC,kBAAf,KAAsC;AACtD,YAAMC,eAAe,GAAG,CAACF,YAAD,EAAe,GAAGC,kBAAlB,EAAsCE,MAAtC,CACtB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACR,eAAO,EACL,GAAGD,CADE;AAEL,aAAG;AACD,aAACC,CAAD,GAAK;AAAEC,cAAAA,UAAU,EAAE,uDAAd;AAAuEC,cAAAA,YAAY,EAAE;AAArF;AADJ,WAFE;AAKL,aAAGT,aAAa,CAAC;AACfH,YAAAA,OAAO,EAAE,KAAKN,KAAL,CAAWM,OADL;AAEfF,YAAAA,WAAW,EAAE,KAAKJ,KAAL,CAAWI;AAFT,WAAD;AALX,SAAP;AAUD,OAZqB,EAatB,EAbsB,CAAxB;AAgBA,WAAKI,QAAL,CAAc,CAAC;AAAEL,QAAAA;AAAF,OAAD,MAAuB;AACnCA,QAAAA,YAAY,EAAE,EAAE,GAAGA,YAAL;AAAmB,aAAGU;AAAtB;AADqB,OAAvB,CAAd;AAED,KA1CgC;;AAAA,SA4CjCM,MA5CiC,GA4CxB,CAAC;AAAER,MAAAA,YAAF;AAAgBS,MAAAA;AAAhB,KAAD,KAAoC;AAC3C;AACA,UAAIC,IAAI,GAAG,KAAKC,IAAL,CAAUD,IAAV,CAAe;AACxBE,QAAAA,IAAI,EAAEZ,YADkB;AAExBa,QAAAA,EAAE,EAAEJ,YAFoB;AAGxBK,QAAAA,SAAS,EAAE,GAHa,CAGT;;AAHS,OAAf,CAAX,CAF2C,CAQ3C;;AACA,UAAIJ,IAAI,KAAK,IAAb,EAAmB;AACnB,WAAKb,QAAL,CAAc,CAAC;AAAEF,QAAAA,OAAF;AAAWF,QAAAA;AAAX,OAAD,MAA+B;AAC3CH,QAAAA,GAAG,EAAE,KAAKqB,IAAL,CAAUrB,GAAV,EADsC;AAE3CK,QAAAA,OAAO,EAAE,KAAKgB,IAAL,CAAUhB,OAAV,CAAkB;AAAEoB,UAAAA,OAAO,EAAE;AAAX,SAAlB,CAFkC;AAG3CvB,QAAAA,YAAY,EAAEM,aAAa,CAAC;AAAEL,UAAAA,WAAF;AAAeE,UAAAA;AAAf,SAAD;AAHgB,OAA/B,CAAd;AAKD,KA3DgC;;AAAA,SA6DjCqB,iBA7DiC,GA6DbtB,MAAM,IAAI;AAC5B;AACA,UAAIuB,KAAK,GAAG,KAAKN,IAAL,CAAUM,KAAV,CAAgB;AAACvB,QAAAA,MAAM,EAAEA,MAAT;AAAiBqB,QAAAA,OAAO,EAAE;AAA1B,OAAhB,CAAZ;AACA,UAAIE,KAAK,CAACC,MAAN,KAAiB,CAArB,EAAwB;AAExB,UAAIjB,kBAAkB,GAAG,EAAzB;;AACA,WAAK,IAAIkB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACC,MAA1B,EAAkCC,CAAC,EAAnC,EAAuC;AACrClB,QAAAA,kBAAkB,CAACmB,IAAnB,CAAwBH,KAAK,CAACE,CAAD,CAAL,CAASN,EAAjC;AACD;;AAED,WAAKd,eAAL,CAAqBL,MAArB,EAA6BO,kBAA7B;AACD,KAxEgC;;AAAA,SA0EjCoB,gBA1EiC,GA0Ed3B,MAAM,IAAI,KAAKE,qBAAL,CAA2BF,MAA3B,CA1EI;;AAAA,SA4EjC4B,gBA5EiC,GA4Ed5B,MAAM,IAAI;AAC3B,WAAKG,QAAL,CAAc;AACZN,QAAAA,eAAe,EACbG,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,IAA9B,IAAsCA,MAAM,KAAK,IAAjD,IAAyDA,MAAM,KAAK,IAApE,GACI;AAAE6B,UAAAA,eAAe,EAAE;AAAnB,SADJ,GAEI;AAAEC,UAAAA,SAAS,EAAE;AAAb;AAJM,OAAd;AAMD,KAnFgC;;AAAA,SAqFjCC,aArFiC,GAqFjB/B,MAAM,IAAI;AACxB,WAAKG,QAAL,CAAc,CAAC;AAAEF,QAAAA;AAAF,OAAD,MAAkB;AAC9BH,QAAAA,YAAY,EAAEM,aAAa,CAAC;AAAEL,UAAAA,WAAW,EAAEC,MAAf;AAAuBC,UAAAA;AAAvB,SAAD,CADG;AAE9BF,QAAAA,WAAW,EAAEC;AAFiB,OAAlB,CAAd;AAKA,UAAIgB,IAAI,GAAG,KAAKC,IAAL,CAAUD,IAAV,CAAe;AACxBE,QAAAA,IAAI,EAAE,KAAKvB,KAAL,CAAWI,WADO;AAExBoB,QAAAA,EAAE,EAAEnB,MAFoB;AAGxBoB,QAAAA,SAAS,EAAE;AAHa,OAAf,CAAX,CANwB,CAYxB;;AACA,UAAIJ,IAAI,KAAK,IAAb,EAAmB;AAEnB,WAAKb,QAAL,CAAc;AACZP,QAAAA,GAAG,EAAE,KAAKqB,IAAL,CAAUrB,GAAV,EADO;AAEZK,QAAAA,OAAO,EAAE,KAAKgB,IAAL,CAAUhB,OAAV,CAAkB;AAAEoB,UAAAA,OAAO,EAAE;AAAX,SAAlB,CAFG;AAGZtB,QAAAA,WAAW,EAAE;AAHD,OAAd;AAKD,KAzGgC;;AAAA,SA2GjCiC,kBA3GiC,GA2GZhC,MAAM,IACzB,KAAKG,QAAL,CAAc;AACZL,MAAAA,YAAY,EAAE;AAAE,SAACE,MAAD,GAAU;AAAE6B,UAAAA,eAAe,EAAE;AAAnB;AAAZ;AADF,KAAd,CA5G+B;AAAA;;AAGjCI,EAAAA,iBAAiB,GAAG;AAChB,SAAKhB,IAAL,GAAY,IAAIzB,KAAJ,EAAZ;AACH;;AA2GD0C,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEtC,MAAAA,GAAF;AAAOC,MAAAA,eAAP;AAAwBC,MAAAA;AAAxB,QAAyC,KAAKH,KAApD;AAEA,WAAO,KAAKwC,KAAL,CAAWC,QAAX,CAAoB;AACzBtC,MAAAA,YADyB;AAEzBuC,MAAAA,QAAQ,EAAEzC,GAFe;AAGzB0B,MAAAA,iBAAiB,EAAE,KAAKA,iBAHC;AAIzBK,MAAAA,gBAAgB,EAAE,KAAKA,gBAJE;AAKzBb,MAAAA,MAAM,EAAE,KAAKA,MALY;AAMzBjB,MAAAA,eANyB;AAOzB+B,MAAAA,gBAAgB,EAAE,KAAKA,gBAPE;AAQzBG,MAAAA,aAAa,EAAE,KAAKA,aARK;AASzBC,MAAAA,kBAAkB,EAAE,KAAKA;AATA,KAApB,CAAP;AAWD;;AA9HgC;;AAA/BtC,Y,CACK4C,S,GAAY;AAAEF,EAAAA,QAAQ,EAAE3C,SAAS,CAAC8C;AAAtB,C;AAgIrB,eAAe,SAASC,cAAT,GAA0B;AACvC,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AACAH,IAAAA,QADA;AAEAvB,IAAAA,MAFA;AAGAQ,IAAAA,iBAHA;AAIAK,IAAAA,gBAJA;AAKA7B,IAAAA,YALA;AAMAD,IAAAA,eANA;AAOA+B,IAAAA,gBAPA;AAQAG,IAAAA,aARA;AASAC,IAAAA;AATA,GAAD,kBAWC,oBAAC,aAAD;AACE,IAAA,EAAE,EAAC,cADL;AAEE,IAAA,KAAK,EAAE,GAFT;AAGE,IAAA,QAAQ,EAAEK,QAHZ;AAIE,IAAA,MAAM,EAAEvB,MAJV;AAKE,IAAA,iBAAiB,EAAEQ,iBALrB;AAME,IAAA,gBAAgB,EAAEK,gBANpB;AAOE,IAAA,UAAU,EAAE;AACVd,MAAAA,YAAY,EAAE,KADJ;AAEViB,MAAAA,SAAS,EAAG;AAFF,KAPd;AAWE,IAAA,YAAY,EAAEhC,YAXhB;AAYE,IAAA,eAAe,EAAED,eAZnB;AAaE,IAAA,gBAAgB,EAAE+B,gBAbpB;AAcE,IAAA,aAAa,EAAEG,aAdjB;AAeE,IAAA,kBAAkB,EAAEC,kBAftB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,CADF,CADF;AAmCD;;AAED,MAAM5B,aAAa,GAAG,CAAC;AAAEL,EAAAA,WAAF;AAAeE,EAAAA;AAAf,CAAD,KAA8B;AAClD,QAAMK,YAAY,GAAGL,OAAO,CAACuB,MAAR,IAAkBvB,OAAO,CAACA,OAAO,CAACuB,MAAR,GAAiB,CAAlB,CAAP,CAA4BN,IAAnE;AACA,QAAMH,YAAY,GAAGd,OAAO,CAACuB,MAAR,IAAkBvB,OAAO,CAACA,OAAO,CAACuB,MAAR,GAAiB,CAAlB,CAAP,CAA4BL,EAAnE;AAEA,SAAO;AACL,KAACpB,WAAD,GAAe;AAAE8B,MAAAA,eAAe,EAAE;AAAnB,KADV;AAEL,QAAI5B,OAAO,CAACuB,MAAR,IAAkB;AACpB,OAAClB,YAAD,GAAgB;AACduB,QAAAA,eAAe,EAAE;AADH;AADI,KAAtB,CAFK;AAOL,QAAI5B,OAAO,CAACuB,MAAR,IAAkB;AACpB,OAACT,YAAD,GAAgB;AACdc,QAAAA,eAAe,EAAE;AADH;AADI,KAAtB;AAPK,GAAP;AAaD,CAjBD","sourcesContent":["import React, { Component } from \"react\";\r\nimport Chessboardjsx from \"chessboardjsx\";\r\nimport Chess from \"chess.js\";\r\nimport PropTypes from \"prop-types\";\r\n//133, 105, 45 colours\r\n\r\n// Title: test-chessboardjsx/WithMoveValidation.js\r\n// Author: William Bashelor\r\n// Date: Sept 3rd, 2019\r\n// Code version: v2.4.2\r\n// Availability: https://codesandbox.io/s/x332zqpkl4?file=/src/integrations/WithMoveValidation.js\r\n\r\nclass HumanVsHuman extends Component {\r\n    static propTypes = { children: PropTypes.func };\r\n  \r\n    componentDidMount() {\r\n        this.game = new Chess();\r\n    }\r\n    state = {\r\n      fen: \"start\",\r\n      dropSquareStyle: {},\r\n      squareStyles: {},\r\n      pieceSquare: \"\",\r\n      square: \"\",\r\n      history: []\r\n    };\r\n  \r\n    // keep clicked square style and remove hint squares\r\n    removeHighlightSquare = () => {\r\n      this.setState(({ pieceSquare, history }) => ({\r\n        squareStyles: squareStyling({ pieceSquare, history })\r\n      }));\r\n    };\r\n  \r\n    // show possible moves\r\n    highlightSquare = (sourceSquare, squaresToHighlight) => {\r\n      const highlightStyles = [sourceSquare, ...squaresToHighlight].reduce(\r\n        (a, c) => {\r\n          return {\r\n            ...a,\r\n            ...{\r\n              [c]: { background: \"radial-gradient(circle, #C8BFE7 36%, transparent 40%)\", borderRadius: \"50%\" }\r\n            },\r\n            ...squareStyling({\r\n              history: this.state.history,\r\n              pieceSquare: this.state.pieceSquare\r\n            })\r\n          };\r\n        },\r\n        {}\r\n      );\r\n  \r\n      this.setState(({ squareStyles }) => ({\r\n        squareStyles: { ...squareStyles, ...highlightStyles }}));\r\n    };\r\n  \r\n    onDrop = ({ sourceSquare, targetSquare }) => {\r\n      // see if the move is legal\r\n      let move = this.game.move({\r\n        from: sourceSquare,\r\n        to: targetSquare,\r\n        promotion: \"q\" // always promote to a queen for example simplicity\r\n      });\r\n  \r\n      // illegal move\r\n      if (move === null) return;\r\n      this.setState(({ history, pieceSquare }) => ({\r\n        fen: this.game.fen(),\r\n        history: this.game.history({ verbose: true }),\r\n        squareStyles: squareStyling({ pieceSquare, history })\r\n      }));\r\n    };\r\n  \r\n    onMouseOverSquare = square => {\r\n      // get list of possible moves for this square, return if there are no move available.\r\n      let moves = this.game.moves({square: square, verbose: true });\r\n      if (moves.length === 0) return;\r\n  \r\n      let squaresToHighlight = [];\r\n      for (var i = 0; i < moves.length; i++) {\r\n        squaresToHighlight.push(moves[i].to);\r\n      }\r\n  \r\n      this.highlightSquare(square, squaresToHighlight);\r\n    };\r\n  \r\n    onMouseOutSquare = square => this.removeHighlightSquare(square);\r\n  \r\n    onDragOverSquare = square => {\r\n      this.setState({\r\n        dropSquareStyle:\r\n          square === \"e4\" || square === \"d4\" || square === \"e5\" || square === \"d5\"\r\n            ? { backgroundColor: \"C8BFE7\" }\r\n            : { boxShadow: \"inset 0 0 1px 4px #C8BFE7\" }\r\n      });\r\n    };\r\n  \r\n    onSquareClick = square => {\r\n      this.setState(({ history }) => ({\r\n        squareStyles: squareStyling({ pieceSquare: square, history }),\r\n        pieceSquare: square\r\n      }));\r\n  \r\n      let move = this.game.move({\r\n        from: this.state.pieceSquare,\r\n        to: square,\r\n        promotion: \"q\"\r\n      });\r\n  \r\n      // illegal move\r\n      if (move === null) return;\r\n  \r\n      this.setState({\r\n        fen: this.game.fen(),\r\n        history: this.game.history({ verbose: true }),\r\n        pieceSquare: \"\"\r\n      });\r\n    };\r\n  \r\n    onSquareRightClick = square =>\r\n      this.setState({\r\n        squareStyles: { [square]: { backgroundColor: \"C8BFE7\" } }\r\n      });\r\n  \r\n    render() {\r\n      const { fen, dropSquareStyle, squareStyles } = this.state;\r\n  \r\n      return this.props.children({\r\n        squareStyles,\r\n        position: fen,\r\n        onMouseOverSquare: this.onMouseOverSquare,\r\n        onMouseOutSquare: this.onMouseOutSquare,\r\n        onDrop: this.onDrop,\r\n        dropSquareStyle,\r\n        onDragOverSquare: this.onDragOverSquare,\r\n        onSquareClick: this.onSquareClick,\r\n        onSquareRightClick: this.onSquareRightClick\r\n      });\r\n    }\r\n  }\r\n  \r\n  export default function MoveValidation() {\r\n    return (\r\n      <div>\r\n        <HumanVsHuman>\r\n          {({\r\n            position,\r\n            onDrop,\r\n            onMouseOverSquare,\r\n            onMouseOutSquare,\r\n            squareStyles,\r\n            dropSquareStyle,\r\n            onDragOverSquare,\r\n            onSquareClick,\r\n            onSquareRightClick\r\n          }) => (\r\n            <Chessboardjsx\r\n              id=\"humanVsHuman\"\r\n              width={500}\r\n              position={position}\r\n              onDrop={onDrop}\r\n              onMouseOverSquare={onMouseOverSquare}\r\n              onMouseOutSquare={onMouseOutSquare}\r\n              boardStyle={{\r\n                borderRadius: \"5px\",\r\n                boxShadow: `0 5px 15px rgba(0, 0, 0, 0.5)`\r\n              }}\r\n              squareStyles={squareStyles}\r\n              dropSquareStyle={dropSquareStyle}\r\n              onDragOverSquare={onDragOverSquare}\r\n              onSquareClick={onSquareClick}\r\n              onSquareRightClick={onSquareRightClick}\r\n            />\r\n          )}\r\n        </HumanVsHuman>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  const squareStyling = ({ pieceSquare, history }) => {\r\n    const sourceSquare = history.length && history[history.length - 1].from;\r\n    const targetSquare = history.length && history[history.length - 1].to;\r\n  \r\n    return {\r\n      [pieceSquare]: { backgroundColor: \"C8BFE7\" },\r\n      ...(history.length && {\r\n        [sourceSquare]: {\r\n          backgroundColor: \"C8BFE7\"\r\n        }\r\n      }),\r\n      ...(history.length && {\r\n        [targetSquare]: {\r\n          backgroundColor: \"C8BFE7\"\r\n        }\r\n      })\r\n    };\r\n  };"]},"metadata":{},"sourceType":"module"}