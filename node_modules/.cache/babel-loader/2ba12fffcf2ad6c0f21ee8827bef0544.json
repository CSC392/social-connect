{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alana\\\\Desktop\\\\social-connect\\\\src\\\\components\\\\HostView.js\";\nimport React, { useState } from \"react\";\nimport { Button, ButtonGroup, Select, FormControl, MenuItem } from \"@material-ui/core\";\nimport { TopHeader } from \"./TopHeader\";\nimport { PageNameHeader } from \"./PageNameHeader\";\nimport { Link } from \"react-router-dom\";\nimport { imagesData } from \"../assets/imagesData\";\nimport { HostViewStyles } from \"../styles/HostViewStyles\";\nexport const HostView = props => {\n  const classes = HostViewStyles({});\n  const [disable, setDisable] = useState(false);\n  const [gameSelection, setGameSelection] = useState(\"\");\n\n  const handleChange = event => {\n    setGameSelection(event.target.value);\n  };\n\n  const selectedGameData = imagesData.filter(image => image.title === gameSelection);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TopHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(PageNameHeader, {\n    title: \"Host Game\",\n    onClick: props.goBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"Game Selection\"), /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.gameSelection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    value: gameSelection,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, imagesData.map(image => /*#__PURE__*/React.createElement(MenuItem, {\n    value: image.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }\n  }, image.title)))), gameSelection && /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.image,\n    src: selectedGameData[0].img,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.gamePrivacy,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"Game Privacy\"), /*#__PURE__*/React.createElement(ButtonGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.gameSettingsButton,\n    variant: \"contained\",\n    onClick: () => setDisable(true),\n    disabled: disable,\n    disableElevation: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, \"Public\"), /*#__PURE__*/React.createElement(Button, {\n    className: classes.gameSettingsButton,\n    variant: \"contained\",\n    onClick: () => setDisable(false),\n    disabled: !disable,\n    disableElevation: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, \"Private\")), /*#__PURE__*/React.createElement(Button, {\n    className: classes.hostButton,\n    disabled: !(gameSelection && selectedGameData[0].isDone),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/play/game\",\n    className: classes.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, \"Host\"))));\n};","map":{"version":3,"sources":["C:/Users/alana/Desktop/social-connect/src/components/HostView.js"],"names":["React","useState","Button","ButtonGroup","Select","FormControl","MenuItem","TopHeader","PageNameHeader","Link","imagesData","HostViewStyles","HostView","props","classes","disable","setDisable","gameSelection","setGameSelection","handleChange","event","target","value","selectedGameData","filter","image","title","goBack","body","map","img","gamePrivacy","gameSettingsButton","hostButton","isDone","link"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,MADF,EAEEC,WAFF,EAGEC,MAHF,EAIEC,WAJF,EAKEC,QALF,QAMO,mBANP;AAOA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,UAAT,QAA2B,sBAA3B;AACA,SAASC,cAAT,QAA+B,0BAA/B;AAEA,OAAO,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AACjC,QAAMC,OAAO,GAAGH,cAAc,CAAC,EAAD,CAA9B;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACgB,aAAD,EAAgBC,gBAAhB,IAAoCjB,QAAQ,CAAC,EAAD,CAAlD;;AACA,QAAMkB,YAAY,GAAIC,KAAD,IAAW;AAC9BF,IAAAA,gBAAgB,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAhB;AACD,GAFD;;AAGA,QAAMC,gBAAgB,GAAGb,UAAU,CAACc,MAAX,CACtBC,KAAD,IAAWA,KAAK,CAACC,KAAN,KAAgBT,aADJ,CAAzB;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,cAAD;AAAgB,IAAA,KAAK,EAAC,WAAtB;AAAkC,IAAA,OAAO,EAAEJ,KAAK,CAACc,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAK,IAAA,SAAS,EAAEb,OAAO,CAACc,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEd,OAAO,CAACG,aAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEA,aAAf;AAA8B,IAAA,QAAQ,EAAEE,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,UAAU,CAACmB,GAAX,CAAgBJ,KAAD,iBACd,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEA,KAAK,CAACC,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BD,KAAK,CAACC,KAArC,CADD,CADH,CADF,CAFF,EASGT,aAAa,iBACZ;AAAK,IAAA,SAAS,EAAEH,OAAO,CAACW,KAAxB;AAA+B,IAAA,GAAG,EAAEF,gBAAgB,CAAC,CAAD,CAAhB,CAAoBO,GAAxD;AAA6D,IAAA,GAAG,EAAC,EAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,eAaE;AAAG,IAAA,SAAS,EAAEhB,OAAO,CAACiB,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbF,eAcE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAEjB,OAAO,CAACkB,kBADrB;AAEE,IAAA,OAAO,EAAC,WAFV;AAGE,IAAA,OAAO,EAAE,MAAMhB,UAAU,CAAC,IAAD,CAH3B;AAIE,IAAA,QAAQ,EAAED,OAJZ;AAKE,IAAA,gBAAgB,EAAE,IALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAUE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAED,OAAO,CAACkB,kBADrB;AAEE,IAAA,OAAO,EAAC,WAFV;AAGE,IAAA,OAAO,EAAE,MAAMhB,UAAU,CAAC,KAAD,CAH3B;AAIE,IAAA,QAAQ,EAAE,CAACD,OAJb;AAKE,IAAA,gBAAgB,EAAE,IALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAVF,CAdF,eAkCE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAED,OAAO,CAACmB,UADrB;AAEE,IAAA,QAAQ,EAAE,EAAEhB,aAAa,IAAIM,gBAAgB,CAAC,CAAD,CAAhB,CAAoBW,MAAvC,CAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,YAAT;AAAsB,IAAA,SAAS,EAAEpB,OAAO,CAACqB,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,CAlCF,CAHF,CADF;AAiDD,CA5DM","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Select,\r\n  FormControl,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { TopHeader } from \"./TopHeader\";\r\nimport { PageNameHeader } from \"./PageNameHeader\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { imagesData } from \"../assets/imagesData\";\r\nimport { HostViewStyles } from \"../styles/HostViewStyles\";\r\n\r\nexport const HostView = (props) => {\r\n  const classes = HostViewStyles({});\r\n  const [disable, setDisable] = useState(false);\r\n  const [gameSelection, setGameSelection] = useState(\"\");\r\n  const handleChange = (event) => {\r\n    setGameSelection(event.target.value);\r\n  };\r\n  const selectedGameData = imagesData.filter(\r\n    (image) => image.title === gameSelection\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <TopHeader />\r\n      <PageNameHeader title=\"Host Game\" onClick={props.goBack}></PageNameHeader>\r\n      <div className={classes.body}>\r\n        <p>Game Selection</p>\r\n        <FormControl className={classes.gameSelection}>\r\n          <Select value={gameSelection} onChange={handleChange}>\r\n            {imagesData.map((image) => (\r\n              <MenuItem value={image.title}>{image.title}</MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        {gameSelection && (\r\n          <img className={classes.image} src={selectedGameData[0].img} alt=\"\" />\r\n        )}\r\n\r\n        <p className={classes.gamePrivacy}>Game Privacy</p>\r\n        <ButtonGroup>\r\n          <Button\r\n            className={classes.gameSettingsButton}\r\n            variant=\"contained\"\r\n            onClick={() => setDisable(true)}\r\n            disabled={disable}\r\n            disableElevation={true}\r\n          >\r\n            Public\r\n          </Button>\r\n          <Button\r\n            className={classes.gameSettingsButton}\r\n            variant=\"contained\"\r\n            onClick={() => setDisable(false)}\r\n            disabled={!disable}\r\n            disableElevation={true}\r\n          >\r\n            Private\r\n          </Button>\r\n        </ButtonGroup>\r\n        <Button\r\n          className={classes.hostButton}\r\n          disabled={!(gameSelection && selectedGameData[0].isDone)}\r\n        >\r\n          <Link to=\"/play/game\" className={classes.link}>\r\n            Host\r\n          </Link>\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}